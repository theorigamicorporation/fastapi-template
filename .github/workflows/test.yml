name: Tests

on:
  pull_request:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'pyproject.toml'
      - 'tests/**'
      - '.github/workflows/test.yml'
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'pyproject.toml'
      - 'tests/**'
      - '.github/workflows/test.yml'

jobs:
  lint:
    name: Lint with Ruff
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          
      - name: Run ruff linter
        run: |
          ruff check . --output-format=github
          
      - name: Run ruff formatter check
        run: |
          ruff format --check . || true  # Allow to fail for now due to existing formatting issues
        continue-on-error: true

  typecheck:
    name: Type Check with ty
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ty
          
      - name: Run ty type checker
        run: |
          ty check . || true  # Allow to fail for now since ty is pre-release
        continue-on-error: true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [lint]  # Only run tests if linting passes
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          python -m pytest
          
      - name: Generate test coverage report
        run: |
          pip install coverage
          python -m coverage run -m pytest
          python -m coverage report -m
          python -m coverage xml
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false 